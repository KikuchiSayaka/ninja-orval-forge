[tool.poetry]
name = "ninja-orval-forge"
version = "0.1.0"
description = "Django Ninja + Orval統合環境構築ツール - DRFからの移行とフルスタック型安全開発"
authors = ["Sayaka <your-email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yourusername/ninja-orval-forge"
repository = "https://github.com/yourusername/ninja-orval-forge"
documentation = "https://ninja-orval-forge.readthedocs.io"
keywords = ["django", "ninja", "pydantic", "orval", "vue", "typescript", "api"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.0"
jinja2 = "^3.0"
pyyaml = "^6.0"
rich = "^13.0"
questionary = "^2.0"
inflect = "^6.0"
black = "^23.0"
typer = "^0.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-cov = "^4.0"
mypy = "^1.0"
ruff = "^0.1"
pre-commit = "^3.0"
pytest-mock = "^3.10"

[tool.poetry.scripts]
nof = "ninja_orval_forge.cli:main"
ninja-orval-forge = "ninja_orval_forge.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=ninja_orval_forge --cov-report=term-missing"

[tool.coverage.run]
source = ["ninja_orval_forge"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]